<<<<<<<< HEAD:server/migrations/versions/ce4f10c0384e_.py
"""empty message

Revision ID: ce4f10c0384e
Revises: 
Create Date: 2024-05-15 16:38:52.256607
========
"""Initial migration

Revision ID: c375238e3930
Revises: 
Create Date: 2024-05-16 04:59:18.883363
>>>>>>>> 1e0ccda8d1e4b798e28486df3f92b848eeb5df28:server/migrations/versions/c375238e3930_initial_migration.py

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
<<<<<<<< HEAD:server/migrations/versions/ce4f10c0384e_.py
revision = 'ce4f10c0384e'
========
revision = 'c375238e3930'
>>>>>>>> 1e0ccda8d1e4b798e28486df3f92b848eeb5df28:server/migrations/versions/c375238e3930_initial_migration.py
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=False),
    sa.Column('cat_surveyfee', sa.Integer(), nullable=False),
    sa.Column('cat_localfee', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('service_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('tokenblocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tokenblocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tokenblocklist_jti'), ['jti'], unique=False)

<<<<<<<< HEAD:server/migrations/versions/ce4f10c0384e_.py
========
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
>>>>>>>> 1e0ccda8d1e4b798e28486df3f92b848eeb5df28:server/migrations/versions/c375238e3930_initial_migration.py
    op.create_table('clients',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('firstName', sa.String(), nullable=False),
    sa.Column('lastName', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_clients_category_id_categories')),
    sa.PrimaryKeyConstraint('client_id')
    )
    op.create_table('drillingservices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drill_type', sa.String(), nullable=False),
    sa.Column('downpayment', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], name=op.f('fk_drillingservices_service_id_services')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plumbingservices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pipe_type', sa.String(), nullable=False),
    sa.Column('type_cost', sa.String(), nullable=False),
    sa.Column('pipe_diameter', sa.Integer(), nullable=False),
    sa.Column('diameter_cost', sa.Integer(), nullable=False),
    sa.Column('pipe_length', sa.Integer(), nullable=False),
    sa.Column('length_cost', sa.Integer(), nullable=False),
    sa.Column('outlets', sa.Integer(), nullable=False),
    sa.Column('outlets_cost', sa.Integer(), nullable=False),
<<<<<<<< HEAD:server/migrations/versions/ce4f10c0384e_.py
    sa.Column('image', sa.String(), nullable=False),
========
>>>>>>>> 1e0ccda8d1e4b798e28486df3f92b848eeb5df28:server/migrations/versions/c375238e3930_initial_migration.py
    sa.Column('plumbing_cost', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], name=op.f('fk_plumbingservices_service_id_services')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pumpservices',
    sa.Column('pump_id', sa.Integer(), nullable=False),
    sa.Column('pump_type', sa.String(), nullable=False),
    sa.Column('pump_type_cost', sa.Integer(), nullable=False),
    sa.Column('depth_height', sa.Integer(), nullable=False),
    sa.Column('cost_meters', sa.Integer(), nullable=False),
    sa.Column('depth_height_cost', sa.Integer(), nullable=False),
    sa.Column('pump_cost', sa.Integer(), nullable=False),
<<<<<<<< HEAD:server/migrations/versions/ce4f10c0384e_.py
    sa.Column('image', sa.String(), nullable=False),
========
>>>>>>>> 1e0ccda8d1e4b798e28486df3f92b848eeb5df28:server/migrations/versions/c375238e3930_initial_migration.py
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], name=op.f('fk_pumpservices_service_id_services')),
    sa.PrimaryKeyConstraint('pump_id')
    )
    op.create_table('tanks',
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.Column('tank_name', sa.Integer(), nullable=False),
    sa.Column('price_per_liter', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('Tank_cost', sa.Integer(), nullable=False),
<<<<<<<< HEAD:server/migrations/versions/ce4f10c0384e_.py
    sa.Column('image', sa.String(), nullable=False),
========
>>>>>>>> 1e0ccda8d1e4b798e28486df3f92b848eeb5df28:server/migrations/versions/c375238e3930_initial_migration.py
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], name=op.f('fk_tanks_service_id_services')),
    sa.PrimaryKeyConstraint('tank_id')
    )
    op.create_table('clientservices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('fk_clientservices_client_id_clients')),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], name=op.f('fk_clientservices_service_id_services')),
    sa.PrimaryKeyConstraint('id', 'client_id', 'service_id')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('tax', sa.Numeric(), nullable=False),
    sa.Column('total', sa.Numeric(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_transactions_category_id_categories')),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('fk_transactions_client_id_clients')),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('clientservices')
    op.drop_table('tanks')
    op.drop_table('pumpservices')
    op.drop_table('plumbingservices')
    op.drop_table('drillingservices')
    op.drop_table('clients')
    with op.batch_alter_table('tokenblocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tokenblocklist_jti'))

    op.drop_table('tokenblocklist')
    op.drop_table('services')
    op.drop_table('categories')
    # ### end Alembic commands ###
